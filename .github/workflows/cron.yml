name: cron

on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - dev

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Get latest package version
      run: |
        VERSION=`python3 -m pip index versions python-qpid-proton 2>&1 | grep -v 'WARNING' | head -n 1 | grep -Eo '\(([0-9\.]+)\)$'`
        LATEST_VERSION=`echo ${VERSION} | sed 's/[(\)]//g'`
        if [ -z "$VERSION" ]; then
          echo "Failed to get latest package version. Exiting."
          exit 1
        fi
        echo "LATEST_VERSION=${LATEST_VERSION}" >> "$GITHUB_ENV"

    - name: Get latest committed version
      run: |
        COMMITED_VERSION=`cat version.txt | head -n 1`
        if [ -z "$COMMITED_VERSION" ]; then
          echo "Failed to get latest committed version. Exiting."
          exit 1
        fi
        echo "COMMITED_VERSION=${COMMITED_VERSION}" >> "$GITHUB_ENV"

    - name: Compare versions
      id: compare-versions
      run: |
        if [ "$LATEST_VERSION" == "$COMMITED_VERSION" ]; then
          echo "No new version detected ${LATEST_VERSION} == ${COMMITED_VERSION}. Exiting."
          exit 1
        fi
        echo "New version detected: ${LATEST_VERSION} (was ${COMMITED_VERSION})"

    - name: Commit and push if new version detected
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git checkout dev
        echo ${LATEST_VERSION} > version.txt
        git add version.txt
        git commit -m "Update version to ${LATEST_VERSION}"
        git push --set-upstream origin dev
