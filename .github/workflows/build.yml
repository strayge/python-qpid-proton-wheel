name: build
on: [push]

env:
  # skip pypy, old python versions, and 32-bit
  CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-* pp* *i686 *-win32"

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # used only for cibuildwheel
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.14.1
      - name: Download source
        shell: bash
        run: |
          VERSION=`cat version.txt | head -n 1`
          echo "Current version: $VERSION"
          echo "VERSION=${VERSION}" >> "$GITHUB_ENV"
          pip download --no-binary ":all:" --no-deps python-qpid-proton==$VERSION
      - name: Extract source
        shell: bash
        run: |
          tar -xf python-qpid-proton-$VERSION.tar.gz &&
          rm python-qpid-proton-$VERSION.tar.gz &&
          cp -r python-qpid-proton-$VERSION/* ./
      - name: Install gnu-sed on macOS
        if: runner.os == 'macOS'
        run: |
          brew install gnu-sed
          ln -s `which gsed` /usr/local/bin/sed
      - name: Add postfix to package name
        # twine read package name to upload from metadata, so we need to change it
        shell: bash
        run: |
          sed -i 's/python-qpid-proton/python-qpid-proton-wheel/' setup.py
          sed -i 's/python-qpid-proton/python-qpid-proton-wheel/' setup.cfg
          sed -i 's/python-qpid-proton/python-qpid-proton-wheel/' pyproject.toml
      - name: Set up QEMU on Linux
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
      - name: List builded wheels
        run: ls dist
      - uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.os }}
          path: |
            dist/*.whl

  upload_wheels_test:
    if: github.ref == 'refs/heads/dev'
    needs: build_wheels
    runs-on: ubuntu-20.04
    environment: dev
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - run: mkdir dist
      - name: Combine wheels into dist directory
        run: find artifacts -name '*.whl' -exec cp {} dist/ \;
      - name: Upload wheels
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

  upload_wheels_release:
    if: github.ref == 'refs/heads/master'
    needs: build_wheels
    runs-on: ubuntu-20.04
    environment: master
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - run: mkdir dist
      - name: Combine wheels into dist directory
        run: find artifacts -name '*.whl' -exec cp {} dist/ \;
      - name: Upload wheels
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          verbose: true
          skip-existing: true
